buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://download.crashlytics.com/maven' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.14.+'
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:+'

    }
}
apply plugin: 'com.android.application'
apply plugin: 'crashlytics'

repositories {
    mavenCentral()
    maven { url 'http://download.crashlytics.com/maven' }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    compile project(':volley')
    compile "com.android.support:appcompat-v7:21.0.+"
    compile 'com.android.support:support-v13:21.+'
    compile 'com.android.support:support-v4:21.+'
    compile 'com.android.support:cardview-v7:+'
    compile 'com.android.support:recyclerview-v7:+'
    compile 'com.android.support:palette-v7:+'
    compile 'com.google.guava:guava:18.+'
    compile 'com.google.code.gson:gson:2.+'
    compile 'com.squareup.okhttp:okhttp:2.+'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.+'
    compile('org.simpleframework:simple-xml:2.+') {
        exclude module: 'stax'
        exclude module: 'stax-api'
        exclude module: 'xpp3'
    }
    compile 'com.jakewharton:butterknife:5.+'
    compile 'com.crashlytics.android:crashlytics:+'
}

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.0"

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 21

        buildConfigField "String", "AWS_ENDPOINT", project.properties.AWS_ENDPOINT
        buildConfigField "String", "AWS_ACCESS_KEY_ID", project.properties.AWS_ACCESS_KEY_ID
        buildConfigField "String", "AWS_SECRET_KEY", project.properties.AWS_SECRET_KEY
        buildConfigField "String", "AWS_ASSOCIATE_TAG", project.properties.AWS_ASSOCIATE_TAG
        buildConfigField "String", "BING_API_KEY", project.properties.BING_API_KEY
        buildConfigField "String", "FLICKR_API_KEY", project.properties.FLICKR_API_KEY
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs {
        release {
            storeFile file(project.properties.storeFile)
            storePassword project.properties.storePassword
            keyAlias project.properties.keyAlias
            keyPassword project.properties.keyPassword
        }
    }

    buildTypes {
        release {
            runProguard true
            proguardFile file('proguard-project.txt')
            proguardFile getDefaultProguardFile('proguard-android-optimize.txt')
            signingConfig signingConfigs.release
        }
    }

    productFlavors {
    }
}
